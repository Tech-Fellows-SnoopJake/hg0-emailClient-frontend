import{j as e}from"./jsx-runtime-DQ32znRX.js";import{u as x,g,R as j,b,c as i}from"./index-BSkGTUui.js";import"./index-DH5ua8nC.js";import"./col-DidA2-JF.js";import{u as y,F as a,I as n}from"./index-CM8hO1JF.js";import{S}from"./SendOutlined-DO1er3ay.js";const{Item:s}=a,{TextArea:F}=n,m=({setIsRefetch:l})=>{const r=x(t=>t.user.value),[c,{isLoading:u}]=g(),[o]=y(),p=t=>{if(r){const d={...t,sender_email:r.email,timestamp:new Date,status:!1};c(d).unwrap().then(h=>{i.success(h.message),l(f=>!f),o.resetFields()}).catch(()=>{i.error("Failed to send email. Please try again.")})}};return e.jsxs(a,{onFinish:p,form:o,children:[e.jsx(s,{name:"recipient_email",required:!0,children:e.jsx(n,{prefix:"To ",placeholder:"@awesomemailbox.net",type:"email",autoCapitalize:"none",required:!0})}),e.jsx(s,{name:"subject",required:!0,children:e.jsx(n,{prefix:"Subject ",placeholder:"Subject",required:!0})}),e.jsx(s,{name:"body",required:!0,children:e.jsx(F,{placeholder:"Compose email",required:!0})}),e.jsx(j,{justify:"end",children:e.jsx(b,{type:"primary",htmlType:"submit",icon:e.jsx(S,{}),loading:u,children:"Send"})})]})},R=m;m.__docgenInfo={description:"`MailForm` is a functional component that renders a form for composing and sending emails.\r\nIt provides input fields for the recipient's email, subject, and body of the mail. Upon submission,\r\nit utilizes the `useCreateMailMutation` hook to send the composed mail through the application's mail API.\r\n\r\n@param setIsRefetch - A state setter function from the parent component to trigger refetching of mail lists\r\n                       to reflect the newly sent email.\r\n\r\nThe component uses Ant Design's `Form`, `Input`, and `TextArea` components for the UI,\r\nensuring a consistent and user-friendly experience. It also displays a loading indicator on the send button\r\nwhile the mail sending request is in progress, and shows success or error messages upon completion or failure\r\nof the request.",methods:[],displayName:"MailForm",props:{setIsRefetch:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"boolean"}],raw:"SetStateAction<boolean>"}],raw:"Dispatch<SetStateAction<boolean>>"},description:""}}};export{R as M};
