import{j as e}from"./jsx-runtime-DQ32znRX.js";import{e as b,j as P,b as I,L as F,c as i,k as v,l as k,B as S,P as U,s as _}from"./index-BSkGTUui.js";import{F as s,I as m}from"./index-CM8hO1JF.js";import"./index-DH5ua8nC.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./isNativeReflectConstruct-9pqpKM1A.js";import"./index-CmIfq4uN.js";import"./col-DidA2-JF.js";import"./Search-Cw9bmsZH.js";import"./collapse-C1MjllT7.js";const w=()=>{const[o]=s.useForm(),d=b(),[j]=P(),y=a=>{const t={...a,email:`${a.email}@awesomemailbox.net`};j(t).unwrap().then(r=>{i.success(r==null?void 0:r.message),r.data&&(d(v(r.data.access_token)),d(k(r.data.user)))}).catch(r=>{var l,c,u,p;(c=(l=r.data)==null?void 0:l.message)!=null&&c.email?i.error(r.data.message.email[0]):(p=(u=r.data)==null?void 0:u.message)!=null&&p.username?i.error(r.data.message.username[0]):i.error("An unexpected error occurred. Please try again later.")})};return e.jsxs(s,{form:o,name:"register",onFinish:y,style:{maxWidth:600},children:[e.jsx(s.Item,{children:e.jsx("h1",{children:"Create an account"})}),e.jsx(s.Item,{name:"username",rules:[{required:!0,message:"Please input your name"}],children:e.jsx(m,{placeholder:"Username",onChange:a=>o.setFieldValue("email",a.target.value)})}),e.jsx(s.Item,{name:"email",rules:[{required:!0,message:"Please input an AwesomeMail address"}],children:e.jsx(m,{placeholder:"Email",suffix:"@awesomemailbox.net",disabled:!0})}),e.jsx(s.Item,{name:"password",rules:[{required:!0,message:"Please input your password!"},()=>({validator(a,t){return t&&/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^$*.[\]{}()?!"@#%&/,><':;|_~]).{8,}$/.test(t)?Promise.resolve():Promise.reject(new Error("Password must contain a mix of upper and lowercase letters, numbers, and symbols, and be at least 8 characters."))}})],hasFeedback:!0,children:e.jsx(m.Password,{placeholder:"Password"})}),e.jsx(s.Item,{name:"password2",dependencies:["password"],hasFeedback:!0,rules:[{required:!0,message:"Please confirm your password!"},({getFieldValue:a})=>({validator(t,r){return!r||a("password")===r?Promise.resolve():Promise.reject(new Error("The new password that you entered do not match!"))}})],children:e.jsx(m.Password,{placeholder:"Confirm password"})}),e.jsx(s.Item,{children:e.jsx(I,{type:"primary",htmlType:"submit",children:"Sign up"})}),e.jsx(s.Item,{children:e.jsxs("div",{className:"sign-in-link-container",children:["Already have an account?"," ",e.jsx(F,{to:"/login",className:"sign-in-link",children:"Sign in"})]})})]})},x=w;w.__docgenInfo={description:`\`SignUpForm\` provides a user interface for new users to create an account. It collects user information\r
including username, email (automatically appending "@awesomemail.com" to the provided username), and password.\r
Upon successful registration, it uses the \`useSignupMutation\` hook to send the user's data to the backend,\r
displays a success message, and updates the global state with the user's token and details.\r
\r
The form enforces specific validation rules for the password, requiring a mix of upper and lower case letters,\r
numbers, and symbols, and must be at least 8 characters long. It also includes a field for confirming the password,\r
ensuring that the user accurately types their intended password.\r
\r
In case of any errors during the signup process (username already taken, email already registered),\r
it displays an appropriate error message. If the error is not specifically related to the email or username,\r
a generic error message prompts the user to try again later.\r
\r
The component uses Ant Design's \`Form\`, \`Input\`, and \`Button\` components for a cohesive and accessible user interface.\r
It also provides a link for users who already have an account to navigate to the login page.`,methods:[],displayName:"SignUpForm"};const L={title:"Componentes/SignUp/SignUpForm",component:x,tags:["autodocs"]},A=o=>e.jsx(S,{children:e.jsx(U,{store:_,children:e.jsx(x,{...o})})}),n=A.bind({});n.args={};var h,g,f;n.parameters={...n.parameters,docs:{...(h=n.parameters)==null?void 0:h.docs,source:{originalSource:`(args: {}) => <BrowserRouter>\r
    <Provider store={store}>\r
      <SignUpForm {...args} />\r
    </Provider>\r
  </BrowserRouter>`,...(f=(g=n.parameters)==null?void 0:g.docs)==null?void 0:f.source}}};const V=["Default"];export{n as Default,V as __namedExportsOrder,L as default};
